---
name: build-ublue-custom
on:
  push:
    tags:
    - v4[0-9].[0-9]+.[0-9]+
    paths-ignore:
    - '**/README.md'
  workflow_dispatch:


env:
  IMAGE_NAME: "${{ github.event.repository.name }}"
  IMAGE_DESCRIPTION: "Customized Ucore Image for the Fileserver"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.brand_name}}-${{ inputs.stream_name }}
  cancel-in-progress: true

jobs:
  build_push:
    name: Build and push image
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    # Checkout push-to-registry action GitHub repository
    - name: Checkout Push to Registry action
      uses: actions/checkout@v5

    # Removes PHP and other non essentials from the build environment
    - name: Maximize build space
      uses: ublue-os/remove-unwanted-software@v9

    # Build metadata
    - name: Image Metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}

        labels: |
          io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
          org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
          org.opencontainers.image.title=${{ env.IMAGE_NAME }}

    # Build image using Buildah action
    - name: Build Image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        containerfiles: |
          ./Containerfile
        image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        oci: false

    # Login to registry with token
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Push image using buildah
    - name: Push Image to GHCR
      uses: redhat-actions/push-to-registry@v2
      id: push
      env:
        IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
        REGISTRY_USER: ${{ github.actor }}
        REGISTRY_PASSWORD: ${{ github.token }}
      with:
        tags: ${{ steps.build_image.outputs.tags }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        extra-args: |
          --compression-format=zstd

    # Sign container
    - uses: sigstore/cosign-installer@v4.0.0
      if: github.event_name != 'pull_request'

    - name: Sign container image
      if: github.event_name != 'pull_request'
      run: |
        images=""
        for tag in ${TAGS}; do
          images+="${tag}@${DIGEST} "
        done
        cosign sign -y --key env://COSIGN_PRIVATE_KEY ${images}
      env:
        DIGEST: ${{ steps.push.outputs.digest }}
        TAGS: ${{ steps.meta.outputs.tags }}
        COSIGN_EXPERIMENTAL: false
        COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

    # Remove old instances of packages
    - uses: actions/delete-package-versions@v5
      with:
        package-name: 'ucore-server'
        package-type: 'container'
        min-versions-to-keep: 9
